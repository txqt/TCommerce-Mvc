@using T.Library.Model.ViewsModel
@model List<DeliveryAddressInfoModel>
@{
    Layout = "_InfoLayout";
}
@section account_navigation
{
    @await Component.InvokeAsync("AccountNavigation", new { selectedTabId = (int)AccountNavigationEnum.Addresses })
}
@if (Model?.Count > 0)
{
    <div class="address-list">
        @for (var i = 0; i < Model.Count; i++)
        {
            var address = Model[i];
            <div class="card mb-2" style="width: 100%;">
                <div class="d-flex justify-content-between">
                    <div class="card-left">
                        <div class="card-body">
                            <h6 class="card-subtitle mb-2 text-muted" style="text-transform: uppercase;
    margin: 0px 0px 10px;">
                                @(address.FullName)
                                @if (address.IsDefault)
                                {
                                    <span style="font-size: 12px;
    margin: 0px 0px 0px 15px;
    display: inline-block;
    -webkit-box-align: center;
    align-items: center;
    color: rgb(38, 188, 78);
    text-transform: none;">
                                        <svg style="vertical-align: top;" stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M256 8C119.033 8 8 119.033 8 256s111.033 248 248 248 248-111.033 248-248S392.967 8 256 8zm0 48c110.532 0 200 89.451 200 200 0 110.532-89.451 200-200 200-110.532 0-200-89.451-200-200 0-110.532 89.451-200 200-200m140.204 130.267l-22.536-22.718c-4.667-4.705-12.265-4.736-16.97-.068L215.346 303.697l-59.792-60.277c-4.667-4.705-12.265-4.736-16.97-.069l-22.719 22.536c-4.705 4.667-4.736 12.265-.068 16.971l90.781 91.516c4.667 4.705 12.265 4.736 16.97.068l172.589-171.204c4.704-4.668 4.734-12.266.067-16.971z"></path></svg><span>Địa chỉ mặc định</span>
                                    </span>
                                }
                            </h6>

                            <p class="card-text" style="margin: 0px 0px 5px;">Địa chỉ: <strong>@(address.AddressFull)</strong></p>
                            <p class="card-text">Điện thoại: <strong>@(address.PhoneNumber)</strong></p>
                        </div>
                    </div>
                    <div class="card-right mx-2 my-2">
                        <span><a href="@Url.Action("UpdateAddress", "Account", new{id = address.Id})">Chỉnh sửa</a></span>
                    </div>
                </div>
            </div>
        }
    </div>
    <script asp-location="Footer">
        function deletecustomeraddress(addressId) {
            if (confirm('Are you sure')) {
                var postData = {
                    addressId: addressId
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@Url.RouteUrl("CustomerAddressDelete")",
                    data: postData,
                    dataType: "json",
                    success: function (data, textStatus, jqXHR) {
                        location.href = data.redirect;
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Failed to delete');
                    }
                });
            }
        }
    </script>
}
else
{
    <div class="no-data">
        No Address
    </div>
}
<div class="add-button">
    <button type="button" class="btn btn-info" onclick="location.href='@Url.RouteUrl("CreateAddress")'">Add New</button>
</div>
