@using T.Library.Model.ViewsModel
@model List<DeliveryAddressInfoModel>
@{
    Layout = "_InfoLayout";
}
@section account_navigation
{
    @await Component.InvokeAsync("AccountNavigation", new { selectedTabId = (int)AccountNavigationEnum.Addresses })
}
@if (Model?.Count > 0)
{
    <div class="address-list">
        @for (var i = 0; i < Model.Count; i++)
        {
            var address = Model[i];
            <div class="card" style="width: 100%;">
                <div class="card-body">
                    <h6 class="card-subtitle mb-2 text-muted">@(address.FullName + " " + (address.IsDefault ? "Địa chỉ mặc định" : ""))</h6>
                    <p class="card-text">Địa chỉ: <strong>@(address.AddressFull)</strong></p>
                    <p class="card-text">Điện thoại: <strong>@(address.PhoneNumber)</strong></p>
                </div>
            </div>
        }
    </div>
    <script asp-location="Footer">
        function deletecustomeraddress(addressId) {
            if (confirm('Are you sure')) {
                var postData = {
                    addressId: addressId
                };
                addAntiForgeryToken(postData);

                $.ajax({
                    cache: false,
                    type: "POST",
                    url: "@Url.RouteUrl("CustomerAddressDelete")",
                    data: postData,
                    dataType: "json",
                    success: function (data, textStatus, jqXHR) {
                        location.href = data.redirect;
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert('Failed to delete');
                    }
                });
            }
        }
    </script>
}
else
{
    <div class="no-data">
        No Address
    </div>
}
<div class="add-button">
    <button type="button" class="btn btn-info" onclick="location.href='@Url.RouteUrl("CreateAddress")'">Add New</button>
</div>
