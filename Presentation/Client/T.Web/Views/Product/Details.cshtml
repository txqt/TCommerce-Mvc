@model ProductDetailsModel
@{
    ViewData["Title"] = Model.Title;
}
<main class="main">

    @* @await Html.PartialAsync("_ProductBreadcrumb") *@
    <br />
    <div class="page-content">
        <div class="container">
            <div class="product-details-top">
                <form asp-route="Product" asp-route-sename="@Model.SeName" method="post" id="product-details-form">
                    <div class="row">
                        @if (Model.AddToCart.UpdatedShoppingCartItemId > 0 && Model.ItemUpdateInfo is not null)
                        {
                            var itemToUpdateModel = Model.ItemUpdateInfo;
                            <div class="col-md-12 mx-4 my-4">
                                <div class="card">
                                    <div class="card-body">
                                        <div class="product-details text-center">
                                            <h2 class="text-info">Đang sửa sản phẩm trong giỏ hàng:</h2>
                                            <h1 class="product-title">@itemToUpdateModel.ProductName</h1>
                                            <p>@itemToUpdateModel.AttributeInfo</p>
                                            <p>@itemToUpdateModel.Quantity</p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        }
                        <div class="col-md-6">
                            @await Html.PartialAsync("_ProductDetailsPictures", Model)
                        </div><!-- End .col-md-6 -->

                        <div class="col-md-6">
                            <div class="product-details">
                                <h1 class="product-title">
                                    @Model.Title
                                    @if(ViewBag.IsAdmin && ViewBag.IsManageProduct)
                                    {
                                        <a class="text-info" href="@Url.Action("EditProduct", "Product", new{area = "admin", id = Model.Id})"> (Sửa)</a>
                                    }
                                </h1><!-- End .product-title -->
                                <div class="ratings-container">
                                    <div class="ratings">
                                        <div class="ratings-val" style="width: 80%;"></div><!-- End .ratings-val -->
                                    </div><!-- End .ratings -->
                                    <a class="ratings-text" href="#product-review-link" id="review-link">( 2 Reviews )</a>
                                </div><!-- End .rating-container -->

                                <div class="product-price-@Model.Id product-price">
                                    @Model.Price.ToString("N0")
                                    @if (Model.OldPrice > 0)
                                    {
                                        <s>@Model.OldPrice.ToString("N0")</s>
                                    }
                                </div><!-- End .product-price -->

                                <div class="product-content">
                                    <p>@Model.ShortDescription</p>
                                </div><!-- End .product-content -->
                                @{
                                    var dataDictAttributes = new ViewDataDictionary(ViewData);
                                    dataDictAttributes.TemplateInfo.HtmlFieldPrefix = $"attributes_{Model.Id}";
                                    @await Html.PartialAsync("_ProductAttributes", Model, dataDictAttributes)
                                }


                                @{
                                    var dataDictAddToCart = new ViewDataDictionary(ViewData);
                                    dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = $"addtocart_{Model.Id}";
                                    @await Html.PartialAsync("_AddToCart", Model.AddToCart, dataDictAddToCart)
                                }

                                <div class="product-details-footer">
                                    <div class="product-cat">
                                        <span>Category:</span>
                                        @if (Model.Categories.Count > 0)
                                        {
                                            var categories = Model.Categories;
                                            for (int i = 0; i < categories.Count; i++)
                                            {
                                                <a href="@categories[i].SeName">@categories[i].CategoryName</a>
                                                if (i < categories.Count - 1)
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                        }
                                    </div><!-- End .product-cat -->

                                    <div class="social-icons social-icons-sm">
                                        <span class="social-label">Share:</span>
                                        <a href="#" class="social-icon" title="Facebook" target="_blank"><i class="icon-facebook-f"></i></a>
                                        <a href="#" class="social-icon" title="Twitter" target="_blank"><i class="icon-twitter"></i></a>
                                        <a href="#" class="social-icon" title="Instagram" target="_blank"><i class="icon-instagram"></i></a>
                                        <a href="#" class="social-icon" title="Pinterest" target="_blank"><i class="icon-pinterest"></i></a>
                                    </div>
                                </div><!-- End .product-details-footer -->
                            </div><!-- End .product-details -->
                        </div><!-- End .col-md-6 -->
                    </div><!-- End .row -->
                </form>
            </div><!-- End .product-details-top -->

            <div class="product-details-tab">
                <ul class="nav nav-pills justify-content-center" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="product-desc-link" data-toggle="tab" href="#product-desc-tab" role="tab" aria-controls="product-desc-tab" aria-selected="true">Description</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="product-desc-tab" role="tabpanel" aria-labelledby="product-desc-link">
                        <div class="product-desc-content">
                            <h3>Product Information</h3>
                            @if (!string.IsNullOrEmpty(Model.Description))
                            {
                                @Html.Raw(Model.Description)
                            }
                        </div><!-- End .product-desc-content -->
                    </div>
                </div><!-- End .tab-content -->
            </div><!-- End .product-details-tab -->
            @await Component.InvokeAsync("RelatedProducts", new { productId = Model.Id })
        </div><!-- End .container -->
    </div><!-- End .page-content -->
</main><!-- End .main -->