@model DataTableViewModel

<style>
    div.dt-buttons {
        margin: 10px 10px 10px 0; /* Adjust as needed */
    }

    .create-new-button {
        margin-right: 0;
    }
</style>

<h1 class="text-info">@Model.TableTitle</h1>

<br />

@* @if (Model.CreateUrl != null || Model.CreateUrl == string.Empty)
{
    <p>
        @if (Model.PopupWindow)
        {
            <button class="btn btn-info" onclick="openPopup('@Model.CreateUrl')">@(Model.CreateButtonName == null ? "Create new" : Model.CreateButtonName)</button>
        }
        else
        {
            <a class="btn btn-info" href="@Model.CreateUrl">@(Model.CreateButtonName == null ? "Create new" : Model.CreateButtonName)</a>
        }
    </p>
} *@

<div class="table-responsive display" style="width:100%">
    <table class="table table-success table-striped table-hover" id="@Model.TableId">
        <thead>
            <tr>
                @foreach (var header in Model.Headers)
                {
                    <th>@header</th>
                }
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        var tableId = '#@Model.TableId';
        var url = '@Model.GetDataUrl';
        var columns = @Html.Raw(Json.Serialize(Model.Columns));
        var createUrl = '@Model.CreateUrl';
        var buttons = [
            {
                text: '<i class="fa fa-redo"></i>',
                action: function (e, dt, node, config) {
                    dt.ajax.reload();
                }
            },
            'copy',
            {
                extend: 'collection',
                text: 'Print table',
                buttons: [
                    'excel',
                    'pdf'
                ]
            }
        ];

        if (createUrl && createUrl.length > 0) {
            var createButton = {
                text: '@(Model.CreateButtonName == null ? "Create" : Model.CreateButtonName)',
                action: function (e, dt, node, config) {
    @if (Model.PopupWindow)
    {
        <text>
                            openPopup(createUrl);
        </text>
    }
    else
    {
        <text>
                            window.location.href = createUrl;
        </text>
    }
                                },
                className: 'create-new-button btn btn-info'
            };
            buttons.unshift(createButton);
        }

        LoadTable(tableId, url, columns, buttons);
    });


    function LoadTable(tableId, url, columns, buttons) {
        var dataTableColumns = columns.map(function (column) {
            if (column.isEditable) {
                return {
                    data: null,
                    render: function (data, type, row) {
                        var editUrl = column.editUrl + '?id=' + row.id;
                        if (@Model.PopupWindow.ToString().ToLower()) {
                            return '<button class="btn btn-info" onclick="openPopup(\'' + editUrl + '\')">Edit</button>';
                        } else {
                            return '<a class="btn btn-info" href="' + editUrl + '">Edit</a>';
                        }
                    }
                };
            } else if (column.isDeletable) {
                return {
                    data: null,
                    render: function (data, type, row) {
                        var deleteUrl = column.deleteUrl + '?id=' + row.id;
                        return '<button class="btn btn-danger deleteBtn" data-id="' + row.id + '" data-url="' + deleteUrl + '">Delete</button>';
                    }
                };
            } else if (column.isCheckBox) {
                return {
                    data: column.data,
                    render: function (data, type, row) {
                        if (type === "display") {
                            return '<input type="checkbox" disabled="disabled" ' + (data ? 'checked="checked"' : '') + '/>';
                        }
                        return data;
                    }
                };
            } else if (column.isPicture) {
                return {
                    data: column.data,
                    render: function (data, type, row) {
                        return '<img src="' + data + '" style="max-width: 200px;height: auto; "/>';
                    }
                };
            } else {
                return {
                    data: column.data
                };
            }
        });

        $(tableId).DataTable().destroy();
        $(tableId).DataTable({
            dom: "<'row'<'col-sm-12'B>>" +
                "<'row'<'col-sm-6'l><'col-sm-6'f>>" +
                "<'row'<'col-sm-12'tr>>" +
                "<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
            lengthMenu: @Html.Raw(Json.Serialize(Model.LengthMenu)),
            pageLength: @Model.PageLength,
            serverSide: true,
            ajax: {
                url: url,
                type: "POST",
                data: function (d) {
                    return $.extend({}, d, {
                        pageNumber: d.start / d.length + 1, // Calculate page number based on start and length
                        pageSize: d.length, // Page size is the length
                        searchText: d.search.value, // Search text
                        orderBy: d.order[0].column + " " + d.order[0].dir // Order by
                    });
                },
                dataFilter: function (data) {
                    var json = jQuery.parseJSON(data);
                    json.recordsTotal = json.recordsTotal;
                    json.recordsFiltered = json.recordsFiltered;
                    json.data = json.data;

                    return JSON.stringify(json); // return JSON string
                },
            },
            buttons: buttons,
            columns: dataTableColumns
        });

        $(tableId).on('click', '.deleteBtn', function () {
            var rowId = $(this).data('id');
            var deleteUrl = $(this).data('url');
            if (confirm('Are you sure you want to delete this item?')) {
                $.ajax({
                    url: deleteUrl,
                    type: 'POST',
                    success: function () {
                        $(tableId).DataTable().ajax.reload();
                    },
                    error: function () {
                        alert('An error occurred while deleting the item.');
                    }
                });
            }
        });
    }
</script>