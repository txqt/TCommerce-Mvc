@model CategoryModel

@{
    ViewData["Title"] = "Sửa thể loại";
}

<h1>Sửa thể loại</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" hidden />
            <div class="form-group">
                <label>Chọn thể loại cha</label>
                <div class="dropdown">
                    <select class="form-select" dropdown-toggle" data-toggle="dropdown" asp-items="Model.AvailableCategories" asp-for="ParentCategoryId">
                    </select>
                    <div class="dropdown-menu">
                        <!-- Nội dung các mục trong dropdown -->
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="ShowOnHomepage" /> @Html.DisplayNameFor(model => model.ShowOnHomepage)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IncludeInTopMenu" /> @Html.DisplayNameFor(model => model.IncludeInTopMenu)
                    </label>
                </div>
            </div>
            <div class="form-group">
                <label asp-for="DisplayOrder" class="control-label"></label>
                <input asp-for="DisplayOrder" class="form-control" />
                <span asp-validation-for="DisplayOrder" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div class="col-md-12" style="margin-top: 36px">
    <div id="accordion-3">
        <div class="card">
            <div class="card-header" id="headingThree">
                <h5 class="mb-0">
                    <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse-3" aria-expanded="true" aria-controls="collapse-3">
                        Products
                    </button>
                </h5>
            </div>
            <div id="collapse-3" class="collapse show" aria-labelledby="headingThree" data-parent="#accordion-3">
                <div class="card-body">
                    @{
                        var ProductCategoryList = new DataTableViewModel
            {
                TableTitle = "Products",
                CreateUrl = Url.Action("AddProductToCategory", "Category", new { categoryId = Model.Id }),
                GetDataUrl = Url.Action("GetListCategoryMapping", "Category", new { categoryId = Model.Id }),
                PopupWindow = true,
                Columns = new List<ColumnDefinition>
                    {
                    new ColumnDefinition { Data = "productName", Title = "Product Name" },
                    new ColumnDefinition { Data = "isFeaturedProduct", RenderType = RenderType.RenderBoolean, Title = "Is Featured Product" },
                    new ColumnDefinition { Data = "displayOrder", Title = "Display Order" },
                    // new ColumnDefinition { Data = "id", EditUrl = Url.Action("EditProductCategory", "Product"), RenderType = RenderType.RenderButtonEdit, Title = "Edit" },
                    new ColumnDefinition { Data = "id", DeleteUrl = Url.Action("DeleteCategoryMapping", "Category"), RenderType = RenderType.RenderButtonRemove, Title = "Remove" },
                    }
            };
                    }
                    @await Html.PartialAsync("_Table", ProductCategoryList)
                </div>
            </div>
        </div>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts
    {
    @await Html.PartialAsync("_Summernote", new Summernote("#Description"))
}