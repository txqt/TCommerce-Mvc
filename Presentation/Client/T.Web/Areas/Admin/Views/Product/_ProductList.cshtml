@* @model ProductListViewModel

<div id="dataTable_wrapper" class="dataTables_wrapper dt-bootstrap4">
    <div class="row">
        <div class="col-sm-12 col-md-6">
            <div class="dataTables_length" id="dataTable_length">
                <label>
                    Show
                    <select name="pageSize" id="select-pagesize" onchange="changePageSize()" aria-controls="dataTable" class="custom-select custom-select-sm form-control form-control-sm">
                        <option value="10">10</option>
                        <option value="25">25</option>
                        <option value="50">50</option>
                        <option value="100">100</option>
                    </select> entries
                    <script>
                        var defaultPageSize = @Model.Parameters.PageSize; // giả sử giá trị mặc định là 10

                        $(function () {
                            $("#select-pagesize").val(defaultPageSize); // thiết lập giá trị mặc định cho select
                        });

                        function changePageSize() {
                            var newPageSize = document.getElementsByName("pageSize")[0].value;
                            var url = "@Url.Action("Index", "Product", new { searchText = Model.Parameters.SearchText, orderBy = Model.Parameters.OrderBy, })&PageSize=" + newPageSize
                            getProduct(url);
                        }
                    </script>
                </label>
            </div>
        </div>
        <div class="col-sm-12 col-md-6">

            <div id="dataTable_filter" class="dataTables_filter">
                <label>
                    Search: <input type="search" id="searchInput" name="searchText" value="@ViewBag.SearchText" class="form-control form-control-sm" placeholder="" aria-controls="dataTable">
                </label>
                <script>
                    $(function () {
                        $('#searchInput').on('input', function () {
                            var searchText = $(this).val();
                            var url = "@Url.Action("Index", "Product", new { PageSize = Model.Parameters.PageSize, orderBy = Model.Parameters.OrderBy })&SearchText=" + searchText;
                            getProduct(url);
                        });
                    });
                </script>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-12">
            <table class="table table-bordered dataTable" id="dataTable" width="100%" cellspacing="0" role="grid" aria-describedby="dataTable_info" style="width: 100%;">
                <thead>
                    <tr role="row">
                        <th class="sorting @(Model.Parameters.OrderBy == "name" ? "sorting_desc" : "sorting_asc")" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-sort="descending" aria-label="Name: activate to sort column descending" style="width: 195.2px;">
                            <a class="sorting_header_link"
                               asp-page="/Product/Index"
                               asp-route-PageNumber="@Model.Parameters.PageNumber"
                               asp-route-PageSize="@Model.Parameters.PageSize"
                               asp-route-SearchText="@Model.Parameters.SearchText"
                               asp-route-OrderBy="@(Model.Parameters.OrderBy == "name" ? "name-desc" : "name")">
                                Name
                            </a>
                        </th>
                        <th class="sorting @(Model.Parameters.OrderBy == "Price" ? "sorting_desc" : "sorting_asc")" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Price: activate to sort column ascending" style="width: 195.2px;">
                            <a class="sorting_header_link"
                               asp-page="/Product/Index"
                               asp-route-PageNumber="@Model.Parameters.PageNumber"
                               asp-route-PageSize="@Model.Parameters.PageSize"
                               asp-route-SearchText="@Model.Parameters.SearchText"
                               asp-route-OrderBy="@(Model.Parameters.OrderBy == "price" ? "price-desc" : "price")">
                                Price
                            </a>
                        </th>
                        <th class="sorting @(Model.Parameters.OrderBy == "OldPrice" ? "sorting_desc" : "sorting_asc")" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Old Price: activate to sort column ascending" style="width: 195.2px;">
                            <a class="sorting_header_link"
                               asp-page="/Product/Index"
                               asp-route-PageNumber="@Model.Parameters.PageNumber"
                               asp-route-PageSize="@Model.Parameters.PageSize"
                               asp-route-SearchText="@Model.Parameters.SearchText"
                               asp-route-OrderBy="@(Model.Parameters.OrderBy == "OldPrice" ? "OldPrice-desc" : "OldPrice")">
                                Old Price
                            </a>
                        </th>
                        <th class="sorting @(Model.Parameters.OrderBy == "StockQuantity" ? "sorting_desc" : "sorting_asc")" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Stock Quantity: activate to sort column ascending" style="width: 195.2px;">
                            <a class="sorting_header_link"
                               asp-page="/Product/Index"
                               asp-route-PageNumber="@Model.Parameters.PageNumber"
                               asp-route-PageSize="@Model.Parameters.PageSize"
                               asp-route-SearchText="@Model.Parameters.SearchText"
                               asp-route-OrderBy="@(Model.Parameters.OrderBy == "StockQuantity" ? "StockQuantity-desc" : "StockQuantity")">
                                Stock Quantity
                            </a>
                        </th>
                        <th class="sorting @(Model.Parameters.OrderBy == "CreatedOnUtc" ? "sorting_desc" : "sorting_asc")" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Created date: activate to sort column ascending" style="width: 133.2px;">
                            <a class="sorting_header_link"
                               asp-page="/Product/Index"
                               asp-route-PageNumber="@Model.Parameters.PageNumber"
                               asp-route-PageSize="@Model.Parameters.PageSize"
                               asp-route-SearchText="@Model.Parameters.SearchText"
                               asp-route-OrderBy="@(Model.Parameters.OrderBy == "CreatedOnUtc" ? "CreatedOnUtc-desc" : "CreatedOnUtc")">
                                Created Date
                            </a>
                        </th>
                        <th class="sorting @(Model.Parameters.OrderBy == "UpdatedOnUtc" ? "sorting_desc" : "sorting_asc")" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="Created date: activate to sort column ascending" style="width: 133.2px;">
                            <a class="sorting_header_link"
                               asp-page="/Product/Index"
                               asp-route-PageNumber="@Model.Parameters.PageNumber"
                               asp-route-PageSize="@Model.Parameters.PageSize"
                               asp-route-SearchText="@Model.Parameters.SearchText"
                               asp-route-OrderBy="@(Model.Parameters.OrderBy == "UpdatedOnUtc" ? "UpdatedOnUtc-desc" : "UpdatedOnUtc")">
                                Updated Date
                            </a>
                        </th>
                        <th class="" tabindex="0" aria-controls="dataTable" rowspan="1" colspan="1" aria-label="" style="width: 133.2px;">
                            <a href="#" class="sorting_header_link">Edit</a>
                        </th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th rowspan="1" colspan="1">Name</th>
                        <th rowspan="1" colspan="1">Price</th>
                        <th rowspan="1" colspan="1">Old Price</th>
                        <th rowspan="1" colspan="1">StockQuantity</th>
                        <th rowspan="1" colspan="1">Created Date</th>
                        <th rowspan="1" colspan="1">Edit</th>
                    </tr>
                </tfoot>
                <tbody>
                    @{
                        if (Model != null || Model.ProductList.Count > 0)
                        {
                            int count = 0;
                            foreach (var item in Model.ProductList)
                            {

                                <tr class="@(count % 2 == 0 ? "even" : "odd")">
                                    <td class="sorting_1">@item.Name</td>
                                    <td>@item.Price</td>
                                    <td>@item.OldPrice</td>
                                    <td>@item.StockQuantity</td>
                                    <td>@item.CreatedOnUtc</td>
                                    <td>@item.UpdatedOnUtc</td>
                                    <td style="display: flex; justify-content: space-between">
                                        <a class="btn btn-info" href="@Url.Action("EditProduct","Product", new{ productId = item.Id})">Edit</a>
                                        <a class="btn btn-danger" href="@Url.Action("Delete","Product", new{ id = item.Id})" onclick="return confirm('Are you sure to delete this ?')">Delete</a>
                                    </td>
                                </tr>
                                count++;
                            }
                        }
                        else
                        {
                            <tr class="odd">
                                <td class="sorting_1">No data</td>
                                <td>No data</td>
                                <td>No data</td>
                                <td>No data</td>
                                <td>No data</td>
                                <td>No data</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    @await Html.PartialAsync("_PaginationView", new PagingViewModel(){
            MetaData = Model.MetaData,
            ControllerName = "Product",
            ActionName = "Index",
            dataHtml = "#dataTable"
            }
    )

</div>

<script>
    function getProduct(url) {
        $.ajax({
            url: url,
            type: 'GET',
            success: function (data) {
                $('#dataTable tbody').html($(data).find('#dataTable tbody').html());
                $('#dataTable_info').html($(data).find('#dataTable_info').html());
                $('.pagination').html($(data).find('.pagination').html());
            }
        });
    }
</script> *@