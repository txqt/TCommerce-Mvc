@model ProductSearchModel
@{
    ViewData["Title"] = "Product List";
}
<div class="content-header p-2">
    <div class="d-flex flex-row-reverse mx-2">
        <button type="button" id="delete-selected" class="btn btn-danger">
            <i class="far fa-trash-alt"></i>
            Delete Selected
        </button>
        <a id="add-button" class="btn btn-success mx-2" href="@Url.Action("CreateProduct", "Product")">
            Add New
        </a>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-sm-6">
                <div class="col-auto">
                    <label asp-for="CategoryId" class="col-form-label">Category</label>
                </div>
                <div class="col-auto">
                    <select class="form-select" asp-items="Model.AvailableCategories" asp-for="CategoryId">
                    </select>
                </div>
            </div>
            <div class="col-sm-6">
            </div>
        </div>
        <div class="button text-center p-4">
            <button type="button" id="search-products" class="btn btn-primary btn-search">
                <i class="fas fa-search"></i>
                Search
            </button>
        </div>
    </div>
</div>

@{
    var modelTable = new DataTableViewModel()
            {
                TableTitle = "Product List",
                CreateButtonName = "Tạo sản phẩm mới",
                CreateUrl = Url.Action("CreateProduct", "Product"),
                EditUrl = Url.Action("EditProduct", "Product"),
                DeleteUrl = Url.Action("Delete", "Product"),
                SearchButtonId = "search-products",
                Filters = new List<Filter>()
                {
                    new Filter(nameof(Model.CategoryId)),
                },
                GetDataUrl = Url.Action("GetAll", "Product"),
                ServerSide = true,
                Columns = new List<ColumnDefinition>()
                {
                    new ColumnDefinition(nameof(Product.Id))
                    {
                        RenderType = RenderType.RenderCheckBox,
                        IsMasterCheckBox = true,
                        Orderable = false
                    },
                    new ColumnDefinition(nameof(Product.Name))
                    {
                        Title = nameof(Product.Name)
                    },
                    new ColumnDefinition(nameof(Product.Price))
                    {
                        Title = nameof(Product.Price)
                    },
                    new ColumnDefinition(nameof(Product.StockQuantity))
                    {
                        Title = nameof(Product.StockQuantity)
                    },
                    new ColumnDefinition(nameof(Product.Id))
                    {
                        RenderType = RenderType.RenderButtonEdit,
                        Title = "Edit",
                        Orderable = false
                    },
                    new ColumnDefinition(nameof(Product.Id))
                    {
                        RenderType = RenderType.RenderButtonRemove,
                        Title = "Delete",
                        Orderable = false
                    },
                }
            };
}

<div class="table-responsive display" style="width:100%">
    @await Html.PartialAsync("_Table", modelTable)
</div>

<script>

    $(document).ready(function () {
        var message = 'Chưa chọn sản phẩm';
        $('#delete-selected').bind('click', function () {
            if (selectedIds.length > 0) {
                message = 'Xóa sản phẩm id ' + selectedIds.join(', ') + '?';
                if (confirm(message)) {
                    var postData = {
                        selectedIds: selectedIds
                    };

                    addAntiForgeryToken(postData);

                    $.ajax({
                        cache: false,
                        type: "POST",
                        url: "@(Url.Action("DeleteSelected", "Product"))",
                        data: postData,
                        error: function (jqXHR, textStatus, errorThrown) {
                            alert('Delete failed')
                        },
                        complete: function (jqXHR, textStatus) {
                            if (jqXHR.status === 204) {
                                alert('Nothing selected');
                                return;
                            }
                            updateTable('#@modelTable.TableId');
                        }
                    });
                    return false;
                }
            } else {
                alert(message);
            }
        });

    });

</script>
