@model ProductSearchModel
@{
    ViewData["Title"] = "Product List";
}

<div class="card">
    <div class="card-body">
        <div class="row">
            <div class="col-sm-6">
                <div class="col-auto">
                    <label asp-for="CategoryId" class="col-form-label">Category</label>
                </div>
                <div class="col-auto">
                    <select class="form-select" asp-items="Model.AvailableCategories" asp-for="CategoryId">
                    </select>
                </div>
            </div>
            <div class="col-sm-6">
            </div>
        </div>
        <div class="button text-center p-4">
            <button type="button" id="search-products" class="btn btn-primary btn-search">
                <i class="fas fa-search"></i>
                Search
            </button>
        </div>
    </div>
</div>

@{
    var model = new DataTableViewModel()
            {
                TableTitle = "Product List",
                CreateButtonName = "Tạo sản phẩm mới",
                CreateUrl = Url.Action("CreateProduct", "Product"),
                EditUrl = Url.Action("EditProduct", "Product"),
                DeleteUrl = Url.Action("Delete", "Product"),
                SearchButtonId = "search-products",
                Filters = new List<Filter>()
                {
                    new Filter(nameof(Model.CategoryId)),
                },
                GetDataUrl = Url.Action("GetAll", "Product"),
                ServerSide = true,
                Columns = new List<ColumnDefinition>()
                {
                    new ColumnDefinition(nameof(Product.Id))
                    {
                        RenderType = RenderType.RenderCheckBox,
                        IsMasterCheckBox = true,
                        Orderable = false
                    },
                    new ColumnDefinition(nameof(Product.Name))
                    {
                        Title = nameof(Product.Name)
                    },
                    new ColumnDefinition(nameof(Product.Price))
                    {
                        Title = nameof(Product.Price)
                    },
                    new ColumnDefinition(nameof(Product.StockQuantity))
                    {
                        Title = nameof(Product.StockQuantity)
                    },
                    new ColumnDefinition(nameof(Product.Id))
                    {
                        RenderType = RenderType.RenderButtonEdit,
                        Title = "Edit",
                        Orderable = false
                    },
                    new ColumnDefinition(nameof(Product.Id))
                    {
                        RenderType = RenderType.RenderButtonRemove,
                        Title = "Delete",
                        Orderable = false
                    },
                }
            };
}

<div class="table-responsive display" style="width:100%">
    @await Html.PartialAsync("_Table", model)
</div>
