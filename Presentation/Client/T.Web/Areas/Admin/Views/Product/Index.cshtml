@model ProductParameters
@{
    ViewData["Title"] = "Product List";
}
@* <!-- Page Heading -->
<h1 class="h3 mb-2 text-gray-800">Tables</h1>
<a class="btn btn-info" href="@Url.Action("CreateProduct", "Product")">New</a>
<!-- DataTales Example -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">DataTables Example</h6>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            @await Html.PartialAsync("_ProductList", Model)
        </div>
    </div>
</div> *@
@{
    var product = new Product();
    var model = new DataTableViewModel()
            {
                // TableId = Guid.NewGuid().ToString(),
                TableTitle = "Product List",
                // Headers = new List<string>() {"Name", "Price", "StockQuantity", "Edit", "Delete" },
                CreateButtonName = "Tạo sản phẩm mới",
                CreateUrl = Url.Action("CreateProduct", "Product"),
                SearchButtonId = "search-products",
                Filters = new List<Filter>()
                {
                    new Filter(nameof(Model.CategoryId)),
                },
                GetDataUrl = Url.Action("GetAll", "Product"),
                ServerSide = true,
                Columns = new List<ColumnDefinition>()
                {
                    new ColumnDefinition()
                    {
                        Data = "id",
                        RenderType = RenderType.RenderCheckBox,
                        IsMasterCheckBox = true,
                        Orderable = false
                    },
                    new ColumnDefinition("name")
                    {
                        Title = nameof(product.Name)
                    },
                    new ColumnDefinition("price")
                    {
                        Title = nameof(product.Price)
                    },
                    new ColumnDefinition("stockQuantity")
                    {
                        Title = nameof(product.StockQuantity)
                    },
                    new ColumnDefinition("id")
                    {
                        EditUrl = Url.Action("EditProduct", "Product"),
                        RenderType = RenderType.RenderButtonEdit,
                        Title = "Edit",
                        Orderable = false
                    },
                    new ColumnDefinition("id")
                    {
                        DeleteUrl = Url.Action("Delete", "Product"),
                        RenderType = RenderType.RenderButtonRemove,
                        Title = "Delete",
                        Orderable = false
                    },
                }
            };
}


<form id="myForm" method="post" action="@Url.Action("Test", "Product")">
    <label asp-for="CategoryId"></label>
    <input asp-for="CategoryId" class="form-control" />
    <button type="button" id="search-products" class="btn btn-primary btn-search">
        <i class="fas fa-search"></i>
        Search
    </button>
    <div class="table-responsive display" style="width:100%">
        @await Html.PartialAsync("_Table", model)
    </div>
    <button type="submit">Submit</button>
</form>
