@model ProductAttributeMappingModel

@{
    var pav = new DataTableViewModel
            {
                TableTitle = $"Danh sách thuộc tính {Model.ProductAttributeName}",
                CreateUrl = Url.Action("ProductAttributeValueCreate", "Product", new { productAttributeMappingId = Model.Id }),
                EditUrl = Url.Action("EditProductAttributeValue", "Product"),
                DeleteUrl = Url.Action("DeleteProductAttributeValue", "Product"),
                CreateButtonName = "Tạo mới",
                GetDataUrl = Url.Action("GetValueProductMapping", "Product", new { id = Model.Id }),
                PopupWindow = true,
                Columns = new List<ColumnDefinition>
                    {
                    new ColumnDefinition { Data = nameof(ProductAttributeValueModel.Name), Title = DisplayNameExtensions.GetPropertyDisplayName<ProductAttributeValueModel>(p => p.Name) },
                    new ColumnDefinition { Data = nameof(ProductAttributeValueModel.PriceAdjustment), Title = DisplayNameExtensions.GetPropertyDisplayName<ProductAttributeValueModel>(p => p.PriceAdjustment) },
                    new ColumnDefinition { Data = nameof(ProductAttributeValueModel.WeightAdjustment), Title = DisplayNameExtensions.GetPropertyDisplayName<ProductAttributeValueModel>(p => p.WeightAdjustment) },
                    new ColumnDefinition { Data = nameof(ProductAttributeValueModel.IsPreSelected), RenderType = RenderType.RenderBoolean, Title = DisplayNameExtensions.GetPropertyDisplayName<ProductAttributeValueModel>(p => p.IsPreSelected) },
                    new ColumnDefinition { Data = nameof(ProductAttributeValueModel.PictureThumbnailUrl), Title = DisplayNameExtensions.GetPropertyDisplayName<ProductAttributeValueModel>(p => p.PictureThumbnailUrl) },
                    new ColumnDefinition(nameof(ProductAttributeValueModel.Id)) { RenderType = RenderType.RenderButtonEdit, Orderable = false },
                    new ColumnDefinition(nameof(ProductAttributeValueModel.Id)) { RenderType = RenderType.RenderButtonRemove, Orderable = false },
                    }
            };
}
@await Html.PartialAsync("_Table", pav)