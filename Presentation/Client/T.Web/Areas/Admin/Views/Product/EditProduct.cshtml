@model ProductModel

@{
    ViewData["Title"] = "EditProduct";
}

<h1>Sửa sản phẩm @Model.Name</h1>
<partial name="_ProductNavigation" />
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="EditProduct" style="background-color: #fff; padding: 20px; border-radius: 10px">
            @(await Html.PartialAsync("_AddOrEditProduct"))
        </form>
    </div>
    <div class="col-md-12" style="margin-top: 36px">
        <div id="accordion-2">
            <div class="card">
                <div class="card-header" id="headingTwo">
                    <h5 class="mb-0">
                        <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse-2" aria-expanded="true" aria-controls="collapse-2">
                            Thuộc tính sản phẩm
                        </button>
                    </h5>
                </div>
                <div id="collapse-2" class="collapse show" aria-labelledby="headingTwo" data-parent="#accordion-2">
                    <div class="card-body">
                        @* @(await Html.PartialAsync("_ProductAttributeMappingList", new ProductAttributeMappingModel { ProductId = Model.Id })) *@
                        @{
                            var ProductAttributeMappingListModel = new DataTableViewModel
            {
                // TableId = Guid.NewGuid().ToString(),
                TableTitle = "Danh sách thuộc tính sản phẩm",
                CreateUrl = Url.Action("ProductAttributeMappingCreate", "Product", new { productId = Model.Id }),
                Headers = new List<string> { "ProductAttributeName", "TextPrompt", "IsRequired", "DisplayOrder", "Edit", "Delete" },
                GetDataUrl = Url.Action("GetListProductMapping", "Product", new { productId = Model.Id }),
                Columns = new List<ColumnDefinition>
                        {
                        new ColumnDefinition { Data = "productAttributeName" },
                        new ColumnDefinition { Data = "textPrompt" },
                        new ColumnDefinition { Data = "isRequired", IsCheckBox = true },
                        new ColumnDefinition { Data = "displayOrder" },
                        new ColumnDefinition { EditUrl = Url.Action("EditProductAttributeMapping", "Product"), IsEditable = true },
                        new ColumnDefinition { DeleteUrl = Url.Action("DeleteProductAttributeMapping", "Product"), IsDeletable = true },
                        }
            };
                        }
                        @await Html.PartialAsync("_Table", ProductAttributeMappingListModel)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12" style="margin-top: 36px">
        <div id="accordion-3">
            <div class="card">
                <div class="card-header" id="headingThree">
                    <h5 class="mb-0">
                        <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse-3" aria-expanded="true" aria-controls="collapse-3">
                            Hình ảnh
                        </button>
                    </h5>
                </div>
                <div id="collapse-3" class="collapse show" aria-labelledby="headingThree" data-parent="#accordion-3">
                    <div class="card-body">
                        @* @(await Html.PartialAsync("_ProductPictureList", new ProductPictureModel { ProductId = Model.Id })) *@
                        @{
                            var productPictureList = new ProductPictureModel()
            {
                ProductId = Model.Id,
                DataTable = new DataTableViewModel()
                {
                    // TableId = Guid.NewGuid().ToString(),
                    TableTitle = "Danh sách hình ảnh của " + Model.Name,
                    // CreateUrl = Url.Action("ProductAttributeMappingCreate", "Product", new { productId = Model.Id }),
                    Headers = new List<string> { "Picture", "DisplayOrder", "Delete" },
                    GetDataUrl = Url.Action("ListPhotos", "Product", new { productId = Model.Id }),
                    Columns = new List<ColumnDefinition>
                        {
                        new ColumnDefinition { Data = "pictureUrl", IsPicture = true },
                        new ColumnDefinition { Data = "displayOrder" },
                        new ColumnDefinition { DeleteUrl = Url.Action("DeletePhoto", "Product"), IsDeletable = true },
                        }
                }
            };
                        }
                        @await Html.PartialAsync("_ProductPictureList", productPictureList)
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-12" style="margin-top: 36px">
        <div id="accordion-4">
            <div class="card">
                <div class="card-header" id="headingFour">
                    <h5 class="mb-0">
                        <button type="button" class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapse-4" aria-expanded="true" aria-controls="collapse-4">
                            Các thể loại đã được liên kết
                        </button>
                    </h5>
                </div>
                <div id="collapse-4" class="collapse show" aria-labelledby="headingFour" data-parent="#accordion-4">
                    <div class="card-body">
                        @* @(await Html.PartialAsync("_ProductCategoryList", new ProductCategoryModel { ProductId = Model.Id })) *@
                        @{
                            var ProductCategoryList = new DataTableViewModel
            {
                // TableId = Guid.NewGuid().ToString(),
                TableTitle = "Danh sách thể loại của sản phẩm",
                CreateUrl = Url.Action("ProductCategoryMappingCreate", "Product", new { productId = Model.Id }),
                Headers = new List<string> { "CategoryName", "IsFeaturedProduct", "DisplayOrder", "Edit", "Delete" },
                GetDataUrl = Url.Action("GetListCategoryMapping", "Product", new { productId = Model.Id }),
                Columns = new List<ColumnDefinition>
                        {
                        new ColumnDefinition { Data = "categoryName" },
                        new ColumnDefinition { Data = "isFeaturedProduct", IsCheckBox = true },
                        new ColumnDefinition { Data = "displayOrder" },
                        new ColumnDefinition { EditUrl = Url.Action("EditProductCategory", "Product"), IsEditable = true },
                        new ColumnDefinition { DeleteUrl = Url.Action("DeleteProductCategory", "Product"), IsDeletable = true },
                        }
            };
                        }
                        @await Html.PartialAsync("_Table", ProductCategoryList)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* @section Scripts
    {
    @await Html.PartialAsync("_Summernote", new Summernote("#ShortDescription"))
    @await Html.PartialAsync("_Summernote", new Summernote("#FullDescription", false))
} *@
<script>
    $('#markasnewcheckbox').change(function () {
        if ($(this).is(":checked")) {
            $('#mark-as-new').css('display', 'block');
        } else {
            $('#mark-as-new').css('display', 'none');
        }
    });
</script>
